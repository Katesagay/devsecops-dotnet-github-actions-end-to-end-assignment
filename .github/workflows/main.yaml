name: Run unit tests and SAST scan on the source code

on: push

jobs:
  sonarcloud:
    name: Build and analyze
    runs-on: windows-latest
    permissions: write-all
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:  # Needed to get PR information, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"katesagay_devsecops-dotnet-github-actions-end-to-end-assignment" /o:"katesagay" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build SomeConsoleApplication.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  synk:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: sonarcloud
    name: Example workflow for dotNET using Snyk
    continue-on-error: true
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  zap_scan:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: synk
    name: Run DAST scan on the web application
    continue-on: fail
    steps:
     - name: Checkout
       uses: actions/checkout@v2
       with:
         ref: main
     - name: ZAP Scan
       uses: zaproxy/action-baseline@v0.6.1
       with:
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        target: 'http://testphp.vulnweb.com/'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'

